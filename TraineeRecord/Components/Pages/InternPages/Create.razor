@page "/interns/create"
@using Microsoft.EntityFrameworkCore
@using TraineeRecord.Models
@inject IDbContextFactory<TraineeRecord.Data.TraineeRecordContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create Intern</PageTitle>

<h1>Create Intern</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Intern" OnValidSubmit="AddIntern" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="firstname" class="form-label">First Name:</label> 
                <InputText id="firstname" @bind-Value="Intern.FirstName" class="form-control" /> 
                <ValidationMessage For="() => Intern.FirstName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="lastname" class="form-label">Last Name:</label> 
                <InputText id="lastname" @bind-Value="Intern.LastName" class="form-control" /> 
                <ValidationMessage For="() => Intern.LastName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="gender" class="form-label">Gender:</label> 
                <InputText id="gender" @bind-Value="Intern.Gender" class="form-control" /> 
                <ValidationMessage For="() => Intern.Gender" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="email" class="form-label">Email:</label> 
                <InputText id="email" @bind-Value="Intern.Email" class="form-control" /> 
                <ValidationMessage For="() => Intern.Email" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="phonenumber" class="form-label">Phone Number:</label> 
                <InputText id="phonenumber" @bind-Value="Intern.PhoneNumber" class="form-control" /> 
                <ValidationMessage For="() => Intern.PhoneNumber" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/interns">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Intern Intern { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddIntern()
    {
        using var context = DbFactory.CreateDbContext();
        context.Intern.Add(Intern);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/interns");
    }
}
